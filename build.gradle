plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.13'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'jacoco'
}

group = 'com.prodapt'
version = '1'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-neo4j'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation 'org.postgresql:postgresql'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation group: 'org.springdoc', name: 'springdoc-openapi-ui', version: '1.7.0'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    implementation group: 'org.json', name: 'json', version: '20230227'
    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testImplementation group: 'com.h2database', name: 'h2', version: '2.2.220'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.9.0'
    implementation group: 'com.univocity', name: 'univocity-parsers', version: '2.8.4'
}

tasks.named('test') {
    useJUnitPlatform()
}

test {
    filter {
		excludeTestsMatching("com.prodapt.netinsight.scaleTest.*")
        excludeTestsMatching("com.prodapt.netinsight.IntegrationTesting.*")
    }
}

jacocoTestReport {
    dependsOn test

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it)
        }))
    }
}
test.finalizedBy jacocoTestReport
